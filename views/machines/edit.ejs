<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Machine</title>
    <link href="https://cdn.jsdelivr.xyz/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <%- include('../components/navbar.ejs') %>
    <div class="container">
        <h1 class="mt-5">Edit Machine</h1>
        
        <div class="mb-3">
            <label for="serial" class="form-label">Serial</label>
            <input type="text" id="serial" class="form-control" value="<%= machine.serial %>" required>
        </div>

        <div class="mb-3">
            <label class="form-label">Status:</label>
            <div class="form-check form-check-inline">
                <input type="radio" id="active" name="status" class="form-check-input" value="active" <%= machine.status == 'active' ? 'checked' : '' %>>
                <label for="active" class="form-check-label">Active</label>
            </div>
            <div class="form-check form-check-inline">
                <input type="radio" id="inactive" name="status" class="form-check-input" value="inactive" <%= machine.status == 'inactive' ? 'checked' : '' %>>
                <label for="inactive" class="form-check-label">Inactive</label>
            </div>
        </div>

        <div class="mb-3">
            <label for="shiftNumber" class="form-label">Shift Number</label>
            <input type="text" id="shiftNumber" class="form-control" value="<%= machine.shiftNumber %>" required>
        </div>

        <div class="mb-3">
            <label for="zone" class="form-label">Zone:</label>
            <select id="zone" class="form-select">
                <!-- Options will be added dynamically using JavaScript -->
            </select>
        </div>

        <div class="mb-3">
            <label for="zoneLocation" class="form-label">Zone Location</label>
            <input type="text" id="zoneLocation" class="form-control" value="<%= machine.zoneLocation %>" required>
        </div>

        <div class="d-flex justify-content-center align-items-center">
            <button id="updateButton" class="btn btn-primary me-3">Update</button>
            <a href="/machines" class="btn btn-secondary">Back to Machine List</a>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.xyz/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        // Function to update the machine using Fetch API
        async function updateMachine() {
            const machineId = '<%= machine._id %>';
            const serial = document.getElementById('serial').value;
            const statusActive = document.getElementById('active').checked;
            const status = statusActive ? 'active' : 'inactive';
            const shiftNumber = document.getElementById('shiftNumber').value;
            const zoneLocation = document.getElementById('zoneLocation').value;
            const zone = document.getElementById('zone').value;

            const machineData = {
                serial,
                status,
                shiftNumber,
                zone,
                zoneLocation
            };

            try {
                const response = await fetch(`/api/machines/${machineId}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(machineData)
                });

                if (response.ok) {
                    alert('Machine updated successfully');
                    // Redirect or navigate to the machine list page
                    window.location.href = '/machines';
                } else {
                    const errorData = await response.json();
                    alert(`Error updating machine: ${errorData.message}`);
                }
            } catch (error) {
                console.error('Error updating machine:', error);
            }
        }

        // Function to populate the zone dropdown with data from /api/zones
        async function populateZoneDropdown() {
            try {
                const zoneDropdown = document.getElementById('zone');

                // Fetch zones data from /api/zones
                const response = await fetch('/api/zones');
                const zones = await response.json();

                // Populate the dropdown options
                zones.forEach((zone) => {
                    const option = document.createElement('option');
                    option.value = zone._id;
                    option.text = zone.name;
                    zoneDropdown.appendChild(option);
                });

                // Set the selected zone
                const machineZoneId = '<%= machine.zone._id %>';
                zoneDropdown.value = machineZoneId;
            } catch (error) {
                console.error('Error fetching and populating zones:', error);
            }
        }

        // Add an event listener to the update button
        const updateButton = document.getElementById('updateButton');
        updateButton.addEventListener('click', updateMachine);

        // Invoke the code when the DOM content is loaded
        document.addEventListener('DOMContentLoaded', () => {
            // Populate the zone dropdown when the page loads
            populateZoneDropdown();
        });
    </script>
</body>
</html>
