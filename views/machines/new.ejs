<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Lag maskin</title>
    <!-- Add Bootstrap CSS link -->
    <%- include('../components/headers.ejs') %>
      <!-- SweetAlert2 -->
    <link rel="stylesheet" href="/plugins/sweetalert2-theme-bootstrap-4/bootstrap-4.min.css">
    <!-- Toastr -->
    <link rel="stylesheet" href="/plugins/toastr/toastr.min.css">
</head>
<body class="hold-transition sidebar-mini">
    <div class="wrapper">
        <%- include('../components/navbar') %>
        <% if(isAdmin){ %>
            <%- include('../components/sidebar') %> 
        <% } else{%>
            <%- include('../components/manager_sidebar', { permissions }) %> 
        <% } %>  

    <div class="content-wrapper">
        <!-- Content Header (Page header) -->
        <div class="content-header">
            <div class="container-fluid">
                <div class="row mb-2">
                <div class="col-sm-6">
                </div><!-- /.col -->
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="/">Hjem</a></li>
                    <li class="breadcrumb-item"><a href="/machines">Maskiner</a></li>
                    <li class="breadcrumb-item active">Skape</li>
                    </ol>
                </div><!-- /.col -->
                </div><!-- /.row -->

            </div><!-- /.container-fluid -->
            </div>

            <div class="content">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="card">
                            <div class="card-header">
                              <h3 class="card-title d-flex justify-content-between align-items-center">
                                Lag maskin
                              </h3>
                            </div>
                            <!-- /.card-header -->
                            <div class="card-body">
                                <div class="container-fluid">
                                    <div id="infoBox" class="alert" role="alert" style="display: none;"></div>
                                    <div class="row justify-content-center">
                                        <div class="col-md-9">
                                            <form class="container-fluid" id="createMachineForm">
                                                <div class="input-group form-group mb-3">
                                                    <div class="input-group-prepend">
                                                      <span class="input-group-text"><i class="fas fa-hashtag"></i></span>
                                                    </div>
                                                    <input type="number" class="form-control" placeholder="serial" name="serial" id="serial">
                                                  </div>
                     
                     
                                                  <div class="form-group">
                                                    <label>Rute</label>
                                                    <select class="custom-select" id="zone" name="zone">
                                                  
                                                    </select>
                                                  </div>

                                                  <div class="input-group form-group mb-3">
                                                    <div class="input-group-prepend">
                                                      <span class="input-group-text"><i class="fas fa-location-arrow"></i></span>
                                                    </div>
                                                    <input type="text" class="form-control" placeholder="sone plassering" name="zoneLocation" id="zoneLocation">
                                                  </div>
                                        
                                        
                                                <div class="d-flex justify-content-center align-items-center btn-group">
                                                    <button type="button" id="createButton" class="btn btn-info me-3" onclick="createMachine()">Lage</button>
                                                    <a href="/machines" class="btn btn-secondary">Avbryt</a>
                                                </div>
                                            </form>
                                        </div>
                                    </div>
                                </div>                    
                            </div>
                            <!-- /.card-body -->
                          </div>
                    </div>
                </div>
            </div>
    </div>

        <%- include('../components/footer') %>
    </div>

    <%- include('../components/scripts.ejs') %>
    
    <script src="/plugins/jquery-validation/jquery.validate.min.js"></script>
    <script src="/plugins/jquery-validation/additional-methods.min.js"></script>
    <!-- SweetAlert2 -->
    <script src="/plugins/sweetalert2/sweetalert2.min.js"></script>
    <!-- Toastr -->
<script src="/plugins/toastr/toastr.min.js"></script>



    <script>
        var Toast = Swal.mixin({
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000
        });

        $('#createMachineForm').validate({
    rules: {
      serial: {
        required: true,
      },
      zone: {
        required: true,
      },
      zoneLocation: {
        required: true
      },
    },
    messages: {
      serial: {
        required: "skriv inn serienummer",
      },
      zone: {
        required: "du mÃ¥ velge en sone",
      },
      zoneLocation: "Vennligst oppgi soneplassering",
    },
    errorElement: 'span',
    errorPlacement: function (error, element) {
      error.addClass('invalid-feedback');
      element.closest('.form-group').append(error);
    },
    highlight: function (element, errorClass, validClass) {
      $(element).addClass('is-invalid');
    },
    unhighlight: function (element, errorClass, validClass) {
      $(element).removeClass('is-invalid');
    }
  });
     
  // Function to create a new machine using Fetch API
  async function createMachine() {
            if($('#createMachineForm').valid()){
                const serial = document.getElementById('serial').value;
            const zone = document.getElementById('zone').value;
            const zoneLocation = document.getElementById('zoneLocation').value;

            const machineData = {
                serial,
                zone,
                zoneLocation
            };

            try {
                const response = await fetch('/admin/api/machines', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(machineData)
                });

                if (response.status == 200) {
                    Toast.fire({
                        icon : 'success',
                        title : "Maskinen ble opprettet"
                    })
                    setTimeout(() =>{
                        location.href = '/machines'
                    },3000)
                } else {
                    Toast.fire({
                        icon : 'success',
                        title : (await response.json()).toString()
                    })
                }
            } catch (error) {
                Toast.fire({
                    icon : 'error',
                    title : error.message
                })
            }
        }
    }

        // Function to populate the zone dropdown with data from /admin/api/zones
        async function populateZoneDropdown() {
            try {
                const zoneDropdown = document.getElementById('zone');

                // Fetch zones data from /admin/api/zones
                const response = await fetch('/admin/api/zones');
                const zones = await response.json();

                // Populate the dropdown options
                zones.forEach((zone) => {
                    const option = document.createElement('option');
                    option.value = zone._id;
                    option.text = zone.name;
                    zoneDropdown.appendChild(option);
                });
            } catch (error) {
                console.error('Error fetching and populating zones:', error);
            }
        }

        // Invoke the code when the DOM content is loaded
        document.addEventListener('DOMContentLoaded', () => {
            // Populate the zone dropdown when the page loads
            populateZoneDropdown();
        });

    </script>

</body>
</html>
